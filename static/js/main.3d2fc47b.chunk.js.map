{"version":3,"sources":["containers/Customers/Customers.js","redux/actions/userActions.js","containers/NewCustomer/NewCustomer.js","containers/Orders/Orders.js","containers/App/App.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","redux/Store.js","index.js"],"names":["Customers","props","state","users","filter","handleChange","bind","e","this","setState","target","value","toLowerCase","filtereduser","user","name","includes","className","onChange","map","customer","index","key","city","to","id","orders","length","Component","connect","ADD_USER","DELETE_USER","addUser","type","payload","NewCustomers","handleSubmit","preventDefault","console","log","onSubmit","dispatch","bindActionCreators","Orders","App","activeClassName","path","component","NewCustomer","data","product","quantity","date","Date","userReducer","action","USER","rootReducer","combineReducers","createStore","ReactDOM","render","store","Store","document","getElementById"],"mappings":"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","file":"static/js/main.3d2fc47b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Customers extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            users:props.users,\r\n            filter:''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({filter:e.target.value.toLowerCase()});\r\n    }\r\n    \r\n\r\n    render(){\r\n\r\n        let filtereduser = this.state.users.filter((user)=>{\r\n            return user.name.toLowerCase().includes(this.state.filter);\r\n        })\r\n        return(\r\n            <section className='container'>\r\n                <div>\r\n                <h1>Customers</h1>\r\n                <div>\r\n                    <button>PDF</button>\r\n                    <button>Excel</button>\r\n                    <form>\r\n                        <label>Search:</label>\r\n                        <input onChange={this.handleChange}></input>\r\n                    </form>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Customer Name</th>\r\n                        <th>City</th>\r\n                        <th>State</th>\r\n                        <th>Orders</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        filtereduser.map((customer, index)=>{\r\n                            return(\r\n                                <tr className='entry' key={index}>\r\n                                    <td>{customer.name}</td>\r\n                                    <td>{customer.city}</td>\r\n                                    <td>{customer.state}</td>\r\n                                    <td><Link to={`/Orders:${customer.id}`}>{customer.orders.length}</Link></td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n        users:[\r\n            ...state.users\r\n        ]\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Customers);","export const ADD_USER = 'ADD_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\n\r\nexport function addUser(user){\r\n    return{\r\n        type:ADD_USER,\r\n        payload:{...user}\r\n    }\r\n}\r\n\r\nexport function deleteUser(ID){\r\n    return{\r\n        type:DELETE_USER,\r\n        payload:ID\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as user from '../../redux/actions/userActions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass NewCustomers extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user:{\r\n                name:null,\r\n                city:null,\r\n                state:null,\r\n                orders:[]\r\n            }\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({\r\n            user:{\r\n                ...this.state.user,\r\n                [e.target.name]:e.target.value,\r\n                orders:[]\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        console.log(this.state.user);\r\n        this.props.addUser(this.state.user);\r\n    }\r\n    render(){\r\n        return(\r\n            <section className='container'>\r\n                <h1>New Customer</h1>\r\n                <form className='customerForm' onSubmit={this.handleSubmit}>\r\n                <label>Name:</label>\r\n                <input onChange={this.handleChange} name='name'></input>\r\n                <label>City:</label>\r\n                <input onChange={this.handleChange} name='city'></input>\r\n                <label>State:</label>\r\n                <input onChange={this.handleChange} name='state'></input>\r\n                <button type='submit'>Submit</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators({addUser:user.addUser}, dispatch);\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(NewCustomers);","import React, {Component} from 'react';\r\n\r\nclass Orders extends Component{\r\n    render(){\r\n        return(\r\n            <h1>Orders</h1>\r\n        )\r\n    }\r\n}\r\nexport default Orders;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, NavLink} from 'react-router-dom';\r\nimport Customers from '../Customers/Customers';\r\nimport NewCustomer from '../NewCustomer/NewCustomer';\r\nimport Orders from '../Orders/Orders';\r\n\r\n\r\nimport './app.css';\r\nconst App =()=>{\r\n    return(\r\n        <main>\r\n            <Router>\r\n                <header>\r\n                    <nav>\r\n                        <NavLink to='/Customers' activeClassName='active'>Customers</NavLink>\r\n                        <NavLink to='/NewCustomer' activeClassName='active'>New Customer</NavLink>\r\n                    </nav>\r\n                </header>\r\n                <Route path='/Customers' component={Customers}/>\r\n                <Route path='/Orders' component={Orders}/>\r\n                <Route path='/NewCustomer' component={NewCustomer}/>\r\n            </Router>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App","import * as USER from '../actions/userActions';\r\nconst data = [\r\n    {\r\n        name:'X',\r\n        city:'Little Rock',\r\n        state: 'RT',\r\n        orders: [{\r\n            product:'Apples',\r\n            quantity:5,\r\n            date:new Date()\r\n        }]\r\n    }]\r\nfunction userReducer(users=[...data], action){\r\n    switch(action.type){\r\n        case(USER.ADD_USER):{\r\n            return [\r\n                ...users,\r\n                action.payload\r\n            ]\r\n        }\r\n        case(USER.DELETE_USER):{\r\n            return users.filter((user)=>{return user.id!==action.payload});\r\n        }\r\n\r\n        default:return users;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import {combineReducers} from 'redux';\r\nimport userReducer from './userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    users:userReducer,\r\n}) \r\n\r\nexport default rootReducer;","import {createStore} from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default createStore(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App/App';\r\nimport Store from './redux/Store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={Store}>\r\n        <App/>\r\n    </Provider>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}